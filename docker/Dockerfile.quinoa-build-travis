FROM quinoacomputing/buildenv:gentoo

ARG COVERAGE
ARG CC
ARG CXX
ENV OMPI_CXX=${CXX}
ARG CXXFLAGS

#for coverage
ENV CI true
ENV TRAVIS true
ARG TRAVIS_BRANCH
ARG TRAVIS_JOB_NUMBER
ARG TRAVIS_PULL_REQUEST
ARG TRAVIS_JOB_ID
ARG TRAVIS_TAG
ARG TRAVIS_REPO_SLUG
ARG TRAVIS_COMMIT

RUN rm -rf /home/quinoa/.ccache
COPY quinoa /home/quinoa/quinoa
COPY ccache/ /home/quinoa/.ccache
USER root
RUN chown -R quinoa:quinoa /home/quinoa/quinoa /home/quinoa/.ccache
USER quinoa

WORKDIR /home/quinoa/quinoa
RUN mkdir build

WORKDIR build
RUN ccache -z
RUN cmake \
    ${COVERAGE:+-DCOVERAGE=ON} \
    -DLCOV=/bin/true \
    -DGENHTML=/bin/true \
    -DRUNNER_ARGS="" \
    -DCMAKE_BUILD_TYPE=Release \
    ../src
RUN make VERBOSE=1 -j2
RUN ccache -s
RUN ./charmrun +p2 Main/unittest -v
RUN ctest -j2 -E "(walker:SkewNormalPDF_pe8|walker:DiagOrnsteinUhlenbeckPDF_pe8)"
RUN make install DESTDIR=${PWD}
RUN cd .. && if [ ${COVERAGE} ]; then \
  if [ ${CC} = clang ]; then \
    $HOME/.local/bin/codecov --gcov-exec "llvm-cov gcov"; \
  else \
    $HOME/.local/bin/codecov; \
  fi; \
fi && cd -
USER root
RUN make install
USER quinoa
WORKDIR /home/quinoa


##################### AUGMENT to run this optionally
## Build and generate sonarqube data
#RUN cd quinoa && mkdir -p build && cd build && cmake -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_C_COMPILER=mpicc -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-Werror -DTPL_DIR=/home/quinoa/tpl ../src && build-wrapper-linux-x86-64 --out-dir bw-output make VERBOSE=1 -j$((`cat /proc/cpuinfo | grep MHz | wc -l`))
#
#ADD sonar-project.properties quinoa/build/
##USER root
##RUN chown quinoa quinoa/build/sonar-project.properties
##USER quinoa
#
## Upload sonarqube data
#RUN cd quinoa/build && sonar-scanner
#####################
