// *****************************************************************************
/*!
  \file      src/Walker/integrator.ci
  \copyright 2012-2015, J. Bakosi, 2016-2019, Triad National Security, LLC.
  \brief     Charm++ module interface file for Integrator
  \details   Charm++ module interface file for Integrator
*/
// *****************************************************************************

module integrator {

  extern module distributor;
  extern module collector;

  namespace walker {

    array [1D] Integrator {
      entry Integrator( CProxy_Distributor hostproxy,
                        CProxy_Collector collproxy,
                        uint64_t npar );
      entry void setup( tk::real dt,
                        tk::real t,
                        uint64_t it,
                        const std::map< tk::ctr::Product, tk::real >& moments );
      entry void advance( tk::real dt,
                          tk::real t,
                          uint64_t it,
                          const std::map< tk::ctr::Product, tk::real >& moments
      );
      entry void accumulateOrd( uint64_t it, tk::real t, tk::real dt );
      entry void accumulateCen( uint64_t it,
                                tk::real t,
                                tk::real dt,
                                const std::vector< tk::real >& ord );
    }

  } // walker::

}
